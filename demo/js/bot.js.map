{"version":3,"sources":["../../src/demo/js/bot.js"],"names":["window","metamind","Metamind","apiUrl","botImage","Math","random","toString","substr","$","document","on","e","sendMessage","text","click","disabled","attr","message","val","trim","undefined","show","empty","append","scrollTop","scrollHeight","replaceLineBreaks","replace","data","hide","removeAttr","i","quickResponses","length","parsedResponse","html","response","type","find","dateAfterParam","dateAfter","dateAfterParts","split","moment","add","toDate","subtract","flatpickrInstance","_flatpickr","set","hint","ready","flatpickr","event","keyCode"],"mappings":"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","file":"bot.js","sourcesContent":["(() => {\n  'use strict';\n\n  window.metamind = new window.Metamind({apiUrl: 'http://dev-metamind-api.metatavu.io:8080/v1', 'story': 'lumme-electricity-order' });\n\n  var botImage = 'https://robohash.org/' + Math.random().toString(36).substr(2);\n  \n  $(document).on('click', '.quick-message-btn', function(e) {\n    sendMessage($(this).text());\n  });\n\n  $('.send-message-btn').click(function(e) {\n    sendMessage();\n  });\n  \n  function sendMessage(text) {\n    const disabled = $('.send-message-btn').attr('disabled');\n    const message = text || $('.user-text-input').val() || $('.user-date-input').val();\n\n    if (!message.trim()) {\n      return;\n    }\n\n    if (typeof disabled !== typeof undefined && disabled !== false) {\n      return;\n    }\n    \n    $('.bot-typing').show();\n    $('.user-text-input').val('');\n    $('.send-message-btn').attr('disabled', 'disabled');\n    $('#botHintText').text('');\n    $('.quick-responses').empty();\n    $('.discussion-container').append(\n      `<div class=\"card user-response\">\n        <div class=\"card-body\">\n          <div class=\"media\">\n           <img class=\"mr-3 user-image\" src=\"gfx/user.png\">\n           <div class=\"media-body\">\n             <h5 class=\"mt-0\">Käyttäjä</h5>\n             ${message}\n           </div>\n          </div>\n        </div>\n      </div>`  \n    );\n    $('.discussion-container')[0].scrollTop = $('.discussion-container')[0].scrollHeight;\n    window.metamind.sendMessage(message);\n  }\n  \n  function replaceLineBreaks(text) {\n    return (text||'').replace(/\\n/g, '<br/>');\n  }\n\n  window.metamind.on('response', function(data) {\n    $('.bot-typing').hide();\n    $('.send-message-btn').removeAttr('disabled');\n    $('.user-text-input').val('');\n    $('.user-text-input').hide();\n    $('.user-date-input').hide();\n    \n    for (var i = 0; i < data.quickResponses.length; i++) {\n      $('.quick-responses').append(`<button class=\"btn btn-info btn-sm quick-message-btn\">${data.quickResponses[i]}</button>`);\n    }\n    \n    const parsedResponse = $('<pre>').html(data.response);\n    const type = parsedResponse.find('input[name=\"metamind-hint-type\"]').val() || 'text';\n    \n    if (type === 'date') {\n      const dateAfterParam = parsedResponse.find('input[name=\"metamind-hint-date-after\"]').val();\n      let dateAfter = null;\n      if (dateAfterParam) {\n        const dateAfterParts = dateAfterParam.split(' ');\n        if (dateAfterParts.length === 3) {       \n          if (dateAfterParts[0] === 'add') {\n            dateAfter = moment().add(dateAfterParts[1], dateAfterParts[2]).toDate();\n          } else if (dateAfterParam[0] === 'subtract') {\n            dateAfter = moment().subtract(dateAfterParts[1], dateAfterParts[2]).toDate();\n          }\n        }\n      }\n\n      const flatpickrInstance = $('.user-date-input')[0]._flatpickr;\n      flatpickrInstance.set('minDate', dateAfter ? dateAfter : null);\n    };\n    \n    switch (type) {\n      case 'text':\n        $('.user-text-input').show();\n      break;\n      case 'date':\n        $('.user-date-input').show();\n      break;\n    }\n\n    $('#botHintText').text(data.hint || '');\n\n    $('.discussion-container').append(\n      `<div class=\"card bot-response\">\n        <div class=\"card-body\">\n          <div class=\"media\">\n           <img class=\"mr-3 user-image\" src=\"${botImage}\">\n           <div class=\"media-body\">\n             <h5 class=\"mt-0\">Lumme Bot</h5>\n             ${data.response}\n           </div>\n          </div>\n        </div>\n      </div>`  \n    );\n    $('.discussion-container')[0].scrollTop = $('.discussion-container')[0].scrollHeight;\n  });\n  \n  $(document).ready(() => {\n    $('.bot-typing').hide();\n    $('.user-date-input').flatpickr({\n      \"locale\": \"fi\",\n      \"dateFormat\": \"d.m.Y\",\n      \"allowInput\": false\n    });\n    \n    $('.send-message-btn').attr('disabled', 'disabled');\n    window.metamind.sendMessage('INIT');\n  });\n  \n  $(document).on('keydown', (event) => {\n    if (event.keyCode === 13) {\n      sendMessage();\n    }\n  });\n  \n})();\n"]}